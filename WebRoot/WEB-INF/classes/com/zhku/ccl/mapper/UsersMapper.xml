<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhku.ccl.mapper.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.zhku.ccl.domain.Users" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="uphone" property="uphone" jdbcType="VARCHAR" />
    <result column="upassword" property="upassword" jdbcType="VARCHAR" />
    <result column="uhead" property="uhead" jdbcType="VARCHAR" />
    <result column="did" property="did" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    uid, uphone, upassword, uhead, did
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zhku.ccl.domain.UsersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zhku.ccl.domain.UsersExample" >
    delete from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zhku.ccl.domain.Users" >
    insert into users (uid, uphone, upassword, 
      uhead, did)
    values (#{uid,jdbcType=INTEGER}, #{uphone,jdbcType=VARCHAR}, #{upassword,jdbcType=VARCHAR}, 
      #{uhead,jdbcType=VARCHAR}, #{did,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zhku.ccl.domain.Users" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="uphone != null" >
        uphone,
      </if>
      <if test="upassword != null" >
        upassword,
      </if>
      <if test="uhead != null" >
        uhead,
      </if>
      <if test="did != null" >
        did,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="uphone != null" >
        #{uphone,jdbcType=VARCHAR},
      </if>
      <if test="upassword != null" >
        #{upassword,jdbcType=VARCHAR},
      </if>
      <if test="uhead != null" >
        #{uhead,jdbcType=VARCHAR},
      </if>
      <if test="did != null" >
        #{did,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zhku.ccl.domain.UsersExample" resultType="java.lang.Integer" >
    select count(*) from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update users
    <set >
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.uphone != null" >
        uphone = #{record.uphone,jdbcType=VARCHAR},
      </if>
      <if test="record.upassword != null" >
        upassword = #{record.upassword,jdbcType=VARCHAR},
      </if>
      <if test="record.uhead != null" >
        uhead = #{record.uhead,jdbcType=VARCHAR},
      </if>
      <if test="record.did != null" >
        did = #{record.did,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update users
    set uid = #{record.uid,jdbcType=INTEGER},
      uphone = #{record.uphone,jdbcType=VARCHAR},
      upassword = #{record.upassword,jdbcType=VARCHAR},
      uhead = #{record.uhead,jdbcType=VARCHAR},
      did = #{record.did,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhku.ccl.domain.Users" >
    update users
    <set >
      <if test="uphone != null" >
        uphone = #{uphone,jdbcType=VARCHAR},
      </if>
      <if test="upassword != null" >
        upassword = #{upassword,jdbcType=VARCHAR},
      </if>
      <if test="uhead != null" >
        uhead = #{uhead,jdbcType=VARCHAR},
      </if>
      <if test="did != null" >
        did = #{did,jdbcType=INTEGER},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhku.ccl.domain.Users" >
    update users
    set uphone = #{uphone,jdbcType=VARCHAR},
      upassword = #{upassword,jdbcType=VARCHAR},
      uhead = #{uhead,jdbcType=VARCHAR},
      did = #{did,jdbcType=INTEGER}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  
  
  <!-- 3333333333333333333333333333333333333333333333333333333333333333333333333  -->
  <select id="selectByPhone" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from users
    where uphone = #{uphone}
  </select>
  
  <select id="selectByPhoneAndPassword" resultMap="BaseResultMap" parameterType="com.zhku.ccl.domain.Users" >
    select 
    <include refid="Base_Column_List" />
    from users
    where uphone = #{uphone} and upassword = #{upassword}
  </select>
  
  <!-- 222222222222222222222222222222222222 -->
  <update id="updateUroleByUid" parameterType="hashmap" > 
  	update users set did = (select did from dictionary where dclassify = '角色' and dstate = #{did}) where uid = #{sid}
  </update>
</mapper>