<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhku.ccl.mapper.OrdersMapper">
	<resultMap id="BaseResultMap" type="com.zhku.ccl.domain.Orders">
		<id column="oid" property="oid" jdbcType="INTEGER" />
		<result column="sid" property="sid" jdbcType="INTEGER" />
		<result column="aid" property="aid" jdbcType="INTEGER" />
		<result column="omessage" property="omessage" jdbcType="VARCHAR" />
		<result column="oprice" property="oprice" jdbcType="REAL" />
		<result column="odate" property="odate" jdbcType="DATE" />
		<result column="did" property="did" jdbcType="INTEGER" />
		<result column="uid" property="uid" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		oid, sid, aid, omessage, oprice, odate, did
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.zhku.ccl.domain.OrdersExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from orders
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from orders
		where oid = #{oid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from orders
		where oid = #{oid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.zhku.ccl.domain.OrdersExample">
		delete from orders
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.zhku.ccl.domain.Orders">
		insert into orders (oid, sid,
		aid,
		omessage, oprice, odate,
		did)
		values (#{oid,jdbcType=INTEGER},
		#{sid,jdbcType=INTEGER},
		#{aid,jdbcType=INTEGER},
		#{omessage,jdbcType=VARCHAR}, #{oprice,jdbcType=REAL},
		#{odate,jdbcType=DATE},
		#{did,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.zhku.ccl.domain.Orders">
		insert into orders
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="oid != null">
				oid,
			</if>
			<if test="sid != null">
				sid,
			</if>
			<if test="aid != null">
				aid,
			</if>
			<if test="omessage != null">
				omessage,
			</if>
			<if test="oprice != null">
				oprice,
			</if>
			<if test="odate != null">
				odate,
			</if>
			<if test="did != null">
				did,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="oid != null">
				#{oid,jdbcType=INTEGER},
			</if>
			<if test="sid != null">
				#{sid,jdbcType=INTEGER},
			</if>
			<if test="aid != null">
				#{aid,jdbcType=INTEGER},
			</if>
			<if test="omessage != null">
				#{omessage,jdbcType=VARCHAR},
			</if>
			<if test="oprice != null">
				#{oprice,jdbcType=REAL},
			</if>
			<if test="odate != null">
				#{odate,jdbcType=DATE},
			</if>
			<if test="did != null">
				#{did,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.zhku.ccl.domain.OrdersExample"
		resultType="java.lang.Integer">
		select count(*) from orders
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update orders
		<set>
			<if test="record.oid != null">
				oid = #{record.oid,jdbcType=INTEGER},
			</if>
			<if test="record.sid != null">
				sid = #{record.sid,jdbcType=INTEGER},
			</if>
			<if test="record.aid != null">
				aid = #{record.aid,jdbcType=INTEGER},
			</if>
			<if test="record.omessage != null">
				omessage = #{record.omessage,jdbcType=VARCHAR},
			</if>
			<if test="record.oprice != null">
				oprice = #{record.oprice,jdbcType=REAL},
			</if>
			<if test="record.odate != null">
				odate = #{record.odate,jdbcType=DATE},
			</if>
			<if test="record.did != null">
				did = #{record.did,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update orders
		set oid = #{record.oid,jdbcType=INTEGER},
		sid =
		#{record.sid,jdbcType=INTEGER},
		aid = #{record.aid,jdbcType=INTEGER},
		omessage = #{record.omessage,jdbcType=VARCHAR},
		oprice =
		#{record.oprice,jdbcType=REAL},
		odate = #{record.odate,jdbcType=DATE},
		did = #{record.did,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.zhku.ccl.domain.Orders">
		update orders
		<set>
			<if test="sid != null">
				sid = #{sid,jdbcType=INTEGER},
			</if>
			<if test="aid != null">
				aid = #{aid,jdbcType=INTEGER},
			</if>
			<if test="omessage != null">
				omessage = #{omessage,jdbcType=VARCHAR},
			</if>
			<if test="oprice != null">
				oprice = #{oprice,jdbcType=REAL},
			</if>
			<if test="odate != null">
				odate = #{odate,jdbcType=DATE},
			</if>
			<if test="did != null">
				did = #{did,jdbcType=INTEGER},
			</if>
		</set>
		where oid = #{oid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zhku.ccl.domain.Orders">
		update orders
		set
		sid = #{sid,jdbcType=INTEGER},
		aid = #{aid,jdbcType=INTEGER},
		omessage =
		#{omessage,jdbcType=VARCHAR},
		oprice = #{oprice,jdbcType=REAL},
		odate =
		#{odate,jdbcType=DATE},
		did = #{did,jdbcType=INTEGER}
		where oid =
		#{oid,jdbcType=INTEGER}
	</update>

<!-- 0000000000000000000000000000000000000000000000000000000 -->
	<update id="updateByID" parameterType="com.zhku.ccl.domain.Orders">
		update orders
		set did
		=#{did}
		where oid =#{oid}
	</update>

	<resultMap type="com.zhku.ccl.domain.Users" id="UserAndOrderfood">
		<!-- 用户信息 -->
		<id column="uid" property="uid" />
		<!-- 订单信息（一对多） -->
					<collection property="ordersList" ofType="com.zhku.ccl.domain.Orders">
						<id column="oid" property="oid" />
						<result column="uid" property="uid" />
						<result column="sid" property="sid" />
						<result column="omessage" property="omessage" />
						<result column="oprice" property="oprice" />
						<result column="odate" property="odate" />
						<result column="did" property="did" />
						<!-- 地址信息（一对一） -->
										<association property="address" javaType="com.zhku.ccl.domain.Address">
											<id column="aid" property="aid" />
											<result column="aaddress" property="aaddress" />
											<result column="aname" property="aname" />
											<result column="aphone" property="aphone" />
										</association>
						<!-- 店铺信息（一对一） -->
											<association property="store" javaType="com.zhku.ccl.domain.Store">
												<id column="sid" property="sid" />
												<result column="sname" property="sname" />
												<result column="sfreight" property="sfreight" />
											</association>
						<!-- 订单商品信息（一对多） -->
												<collection property="orderfoodList" ofType="com.zhku.ccl.domain.Orderfood">
															<id column="ofid" property="ofid" />
															<result column="ofnumber" property="ofnumber" />
																					<!-- 商品信息（一对一） -->
																					<association property="food" javaType="com.zhku.ccl.domain.Food">
																						<id column="fid" property="fid" />
																						<result column="fname" property="fname" />
																						<result column="fprice" property="fprice" />
																					</association>
												</collection>
			</collection>
	</resultMap>

	<select id="selectUserAndOrderfood" resultMap="UserAndOrderfood">
		SELECT
		orders.oid,
		orders.uid,
		orders.sid,
		store.sname,
		store.sfreight,
		orders.omessage,
		orders.oprice,
		orders.odate,
		orders.did,
		address.aaddress,
		address.aname,
		address.aphone,
		orderfood.fid,
		orderfood.ofid,
		orderfood.ofnumber,
		food.fname,
		food.fprice
		FROM
		orders,
		address,
		orderfood,
		food,
		users,
		store
		WHERE orders.uid = users.uid
		AND orders.aid=address.aid
		AND
		orders.oid=orderfood.oid
		AND orderfood.fid=food.fid
		AND
		orders.sid=store.sid;
	</select>
	
	<select id="selectUserAndOrderfoodByOid" parameterType="java.lang.Integer"
		resultMap="UserAndOrderfood">
		SELECT
		orders.oid,
		orders.uid,
		orders.sid,
		store.sname,
		store.sfreight,
		orders.omessage,
		orders.oprice,
		orders.odate,
		orders.did,
		address.aaddress,
		address.aname,
		address.aphone,
		orderfood.fid,
		orderfood.ofid,
		orderfood.ofnumber,
		food.fname,
		food.fprice
		FROM
		orders,
		address,
		orderfood,
		food,
		users,
		store
		WHERE orders.oid = #{oid}
		AND
		orders.uid = users.uid
		AND orders.aid=address.aid
		AND
		orders.oid=orderfood.oid
		AND orderfood.fid=food.fid
		AND
		orders.sid=store.sid;
	</select>
	<select id="selectBySidAndDid" parameterType="com.zhku.ccl.domain.Orders"
		resultType="com.zhku.ccl.domain.Orders">
		select *
		from orders
		where sid = #{sid}
		and did = #{did}
	</select>
	<insert id="insertOrders" parameterType="com.zhku.ccl.domain.Orders">
		<selectKey keyProperty="oid" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>

		INSERT INTO orders
		(did,sid,aid)
		VALUE(#{did},#{sid},#{aid});
	</insert>

</mapper>